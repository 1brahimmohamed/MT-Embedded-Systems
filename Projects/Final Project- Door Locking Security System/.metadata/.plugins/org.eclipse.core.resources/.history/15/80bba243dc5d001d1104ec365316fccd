/*
 * uart.h
 *
 *  Created on: Oct 7, 2022
 *      Author: Ahmed
 */

#ifndef UART_H_
#define UART_H_


#include "std_types.h"

/*******************************************************************************
 *                      user defined data-types                                *
 *******************************************************************************/

typedef enum{
	Bits_5,
	Bits_6,
	Bits_7,
	Bits_8,
	Bits_9 = 7
}UART_bitData;


typedef enum
{
	BR_4800 = 4800, BR_9600 = 9600, BR_14400 = 14400, BR_19200 = 19200, BR_38400 = 38400
}UART_BaudRate;


typedef enum{
	Parity_Disable,
	Parity_Even = 2,
	Parity_Odd = 3
}UART_Parity;

typedef enum{
	Stop_Bits_1,
	Stop_Bits_2
}UART_StopBit;



typedef struct{
	UART_Parity parity_mode;
	UART_StopBit stop_bit;
	UART_bitData data_bits;
	UART_BaudRate baud_rate;
}UART_ConfigType;

/*******************************************************************************
 *                      Functions Prototypes                                   *
 *******************************************************************************/

/*
 * Description :
 * Functional responsible for Initialize the UART device by:
 * 1. Setup the Frame format like number of data bits, parity bit type and number of stop bits.
 * 2. Enable the UART.
 * 3. Setup the UART baud rate.
 */
void UART_init(UART_ConfigType* uart_Config);

/*
 * Description :
 * Functional responsible for send byte to another UART device.
 */
void UART_sendByte(const uint8 data);

/*
 * Description :
 * Functional responsible for receive byte from another UART device.
 */
uint8 UART_recieveByte(void);

/*
 * Description :
 * Send the required string through UART to the other UART device.
 */
void UART_sendString(const uint8 *Str);

/*
 * Description :
 * Receive the required string until the '#' symbol through UART from the other UART device.
 */
void UART_receiveString(uint8 *Str); // Receive until #


#endif /* UART_H_ */
